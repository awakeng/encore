상속 및 다형성

1. 필요성 : 개발 생산성 향상 및 코드의 재 사용성
2. 상속
	속성(데이터)들이 일치되는, 이미 존재하는 클래스(super/parent/부모클래스) 를 기반으로 하위 클래스 개발
3. 문법 및 특징
	1. 상속은 변수와 메소드만 상속
	2. 자식 객체 생성시 생성자 내부에 자동 생성됨w
	
4. 생각 가지 치기
	1. API 자체를 개발해서 제공하는 개발자 가정
		- 메소드는 늘 어디서든 사용성을 최대로 극대화해서 제공
		- API 개발자는 자바  언어를 사용해서 개발하는 개발자가 어떤 이름의 클래스 예측 불필요
		- 단 객체 타입에만 제약 : void m(Object v){}/Object m(){}
		
				
5. @ [어~, 애~, 어노테이션]
	- 강제적인 설정
	- 장식자
	- 학습된 어노테이션
		1. @Data 
			- lombok library에서 제공
			- 기능 : 멤버 변수의 get/setXxx 메소드 자동생성
		2. @Override	
			- jdk1.5 부터 추가된 설정
			- 재정의 필수, 개발시 안정적인 선행  rule
	
	
	